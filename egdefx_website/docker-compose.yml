version: '3.8'

services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME:-egdefx_db}
      - POSTGRES_USER=${DB_USER:-egdefx_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-changeme}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-egdefx_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./django_project/backend
      dockerfile: Dockerfile
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=False
      - DJANGO_ALLOWED_HOSTS=${DOMAIN:-localhost},www.${DOMAIN:-localhost}
      - DATABASE_URL=postgres://${DB_USER:-egdefx_user}:${DB_PASSWORD:-changeme}@db:5432/${DB_NAME:-egdefx_db}
      - DJANGO_CORS_ALLOWED_ORIGINS=https://${DOMAIN:-localhost}
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - VITE_API_URL=https://${DOMAIN:-localhost}/api
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/usr/share/nginx/static
      - media_volume:/usr/share/nginx/media
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - frontend
      - backend

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --email ${EMAIL} -d ${DOMAIN} -d www.${DOMAIN} --agree-tos --non-interactive

volumes:
  postgres_data:
  static_volume:
  media_volume:
